{"version":3,"sources":["utils/utils.js","sortingAlgorithms/quickSort.js","sortingAlgorithms/mergeSort.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["resetArray","size","minValue","maxValue","document","querySelector","classList","remove","array","i","push","min","max","Math","floor","random","getRandomArray","highlightRange","left","right","children","add","unhighlightRange","highlightBars","bar1","bar2","delay","setTimeout","getArrayOfHeightsFromNodeList","nodeList","heightArray","forEach","node","offsetHeight","addEventListener","event","getElementById","textContent","target","value","animations","executingAnimations","executeAnimations","executeFunctionsWithTimeout","length","shift","enableTopButtons","disableTopButtons","console","log","disableOrEnableTopButtons","disable","querySelectorAll","element","disabled","startQuickSort","utils","quickSort","pivot","partitionIndex","rangeLeft","rangeRight","swap","sortAroundPivot","j","bar1Height","style","height","animateSwap","n","startMergeSort","mergeSort","middleIndex","ceil","leftArray","slice","rightArray","array1","array2","mergedArray","firstElement","el","arrayContainer","insertBefore","nextSibling","mergeSortedArrays","SortingVisualizer","props","state","this","setState","Array","prototype","call","className","onClick","type","id","defaultValue","map","index","key","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.51fcc74b.chunk.js","sourcesContent":["export function resetArray(size, minValue, maxValue){\n    document.querySelector(\".array\").classList.remove(\"sorted\");\n    return getRandomArray(size, minValue, maxValue);\n}\n\nfunction getRandomArray(size, minValue, maxValue){\n    const array = [];\n    for(let i = 0; i < size; i++){\n        array.push(getRandomNumber(minValue, maxValue));\n    }\n    return array;\n}\n\n//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\nfunction getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nexport function highlightRange(left, right){\n    for(let i = left; i <= right; i++){\n        document.querySelector(\"div.array\").children[i].classList.add(\"highlight\");\n    }\n}\nexport function unhighlightRange(left, right){\n    for(let i = left; i <= right; i++){\n        document.querySelector(\"div.array\").children[i].classList.remove(\"highlight\");\n    }\n}\n\nexport function highlightBars(bar1, bar2, delay){\n    if(!bar1 || !bar2 || !bar1.classList || !bar2.classList){\n        return;\n    }\n    bar1.classList.add(\"viewing\");\n    bar2.classList.add(\"viewing\");\n\n    setTimeout(function(){\n        bar1.classList.remove(\"viewing\");\n        bar2.classList.remove(\"viewing\");\n    }, delay);\n}\n\nexport function getArrayOfHeightsFromNodeList(nodeList){\n    let heightArray = [];\n    nodeList.forEach(function(node){\n        heightArray.push(node.offsetHeight);\n    });\n    return heightArray;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) { \n    document.getElementById(\"animationDelay\").addEventListener(\"change\", function(event){\n        document.querySelector(\"#delayText\").textContent = event.target.value;\n    });\n});\n\nexport let animations = [];\nexport let executingAnimations = false;\n\nexport function executeAnimations(){\n    if(!executingAnimations){\n        executingAnimations = true;\n        executeFunctionsWithTimeout();\n    }\n}\n\nfunction executeFunctionsWithTimeout(){\n    setTimeout(function(){\n        if(animations && animations.length > 0){\n            animations.shift()();\n            executeFunctionsWithTimeout();\n        }\n        else{\n            document.querySelector(\".array\").classList.add(\"sorted\");\n            executingAnimations = false;\n            enableTopButtons();\n        }\n    }, document.getElementById(\"animationDelay\").value);\n}\n\nexport function disableTopButtons(){\n    console.log(\"disabled buttons\");\n    disableOrEnableTopButtons(true);\n}\nexport function enableTopButtons(){\n    console.log(\"enabled buttons\");\n    disableOrEnableTopButtons(false);\n}\nfunction disableOrEnableTopButtons(disable){\n    document.querySelectorAll(\".top button\").forEach(function(element){\n        element.disabled = !!disable;\n    });\n}\n\nexport default {\n    resetArray,\n    highlightRange,\n    unhighlightRange,\n    highlightBars,\n    getArrayOfHeightsFromNodeList,\n    animations,\n    executingAnimations,\n    executeAnimations,\n    disableTopButtons,\n    enableTopButtons\n};\n","import * as utils from '../utils/utils'\n\nexport function startQuickSort(array){\n    utils.disableTopButtons();\n    quickSort(array, 0, array.length-1);\n    utils.executeAnimations();\n}\n\nfunction quickSort(array, left, right){\n    if(left >= right){\n        return;\n    }\n\n    let pivot = array[Math.floor((left + right) / 2)];\n    let partitionIndex = sortAroundPivot(array, left, right, pivot);\n\n    quickSort(array, left, partitionIndex-1);\n    quickSort(array, partitionIndex, right);\n}\n\nfunction sortAroundPivot(array, left, right, pivot){\n    let rangeLeft = left;\n    let rangeRight = right;\n    utils.animations.push(function(){utils.highlightRange(rangeLeft, rangeRight);});\n\n    while(left <= right){\n        while(array[left] < pivot){\n            left++;\n        }\n        while(array[right] > pivot){\n            right--;\n        }\n\n        if(left <= right){\n            // utils.totalActions++;\n            swap(array, left, right);\n            left++;\n            right--;\n        }\n    }\n    utils.animations.push(function(){utils.unhighlightRange(rangeLeft, rangeRight)});\n\n    return left;\n}\n\nfunction swap(array, i, j){\n    utils.animations.push(function(){animateSwap(i, j, document.getElementById(\"animationDelay\").value);});\n    let n = array[i];\n    array[i] = array[j];\n    array[j] = n;\n}\n\nfunction animateSwap(i, j, delay){\n    let bar1 = document.querySelector(\"div.array\").children[i];\n    let bar2 = document.querySelector(\"div.array\").children[j];\n    let bar1Height = bar1.style.height;\n    bar1.style.height = bar2.style.height;\n    bar2.style.height = bar1Height;\n    \n    utils.highlightBars(bar1, bar2, delay);\n}","import * as utils from '../utils/utils'\n\nexport function startMergeSort(array){\n    utils.disableTopButtons();\n    mergeSort(array);\n    utils.executeAnimations();\n}\n\nfunction mergeSort(array){\n    if(array.length <= 1){\n        return array;\n    }\n\n    let middleIndex = Math.ceil(array.length / 2);\n    let leftArray = array.slice(0, middleIndex);\n    let rightArray = array.slice(middleIndex, array.length);\n\n    return mergeSortedArrays(mergeSort(leftArray), mergeSort(rightArray));\n}\n\nfunction mergeSortedArrays(array1, array2) {\n    let i = 0;\n    let j = 0;\n    let mergedArray = [];\n\n    let firstElement = array1[0];\n\n    utils.animations.push(function(){\n        array1.forEach(function(el){el.classList.add(\"highlight\");});\n        array2.forEach(function(el){el.classList.add(\"highlight\");});\n    });\n\n    while(i < array1.length || j < array2.length){\n        if(i > array1.length-1){\n            mergedArray.push(array2[j]);\n            j++;\n        }\n        else if(j > array2.length-1){\n            mergedArray.push(array1[i]);\n            i++;\n        }\n        else{\n            let bar1 = array1[i];\n            let bar2 = array2[j];\n            utils.animations.push(function(){\n                utils.highlightBars(bar1, bar2, document.getElementById(\"animationDelay\").value);\n            });\n            if(bar1.offsetHeight < bar2.offsetHeight){\n                // utils.totalActions++;\n                mergedArray.push(bar1);\n                i++;\n            }\n            else{\n                mergedArray.push(bar2);\n                j++;\n            }\n        }\n    }\n\n    let arrayContainer = document.querySelector(\".array\");\n    arrayContainer.insertBefore(mergedArray[0], firstElement);\n    for(let i = 1; i < mergedArray.length-1; i++){\n        utils.animations.push(function(){\n            arrayContainer.insertBefore(mergedArray[i], mergedArray[i-1].nextSibling);\n        });\n    }\n    utils.animations.push(function(){\n        array1.forEach(function(el){el.classList.remove(\"highlight\");});\n        array2.forEach(function(el){el.classList.remove(\"highlight\");});\n    });\n    return mergedArray;\n}","import React from 'react';\nimport './SortingVisualizer.css';\nimport * as utils from '../utils/utils'\nimport {startQuickSort} from '../sortingAlgorithms/quickSort'\nimport {startMergeSort} from '../sortingAlgorithms/mergeSort'\n\nexport class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: []\n        };\n    }\n\n    componentDidMount() {\n        this.resetArray();\n    }\n\n    resetArray() {\n        const array = utils.resetArray(200, 5, 700);\n\n        this.setState(state => ({\n            array: array\n        }));\n    }\n\n    quickSort() {\n        let heightArray = utils.getArrayOfHeightsFromNodeList(document.querySelectorAll(\".array .array-bar\"));\n        startQuickSort(heightArray);\n    }\n\n    mergeSort() {\n        startMergeSort(Array.prototype.slice.call(document.querySelectorAll(\".array .array-bar\")));\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"top\">\n                    <button className=\"reset-array\" onClick={() => this.resetArray()}>\n                        Generate New Array\n                    </button>\n                    <button className=\"sort-button\" onClick={() => this.quickSort()}>\n                        Quick Sort\n                    </button>\n                    <button className=\"sort-button\" onClick={() => this.mergeSort()}>\n                        Merge Sort\n                    </button>\n                    <span>Animation Speed:</span>\n                    <input type=\"range\" id=\"animationDelay\" defaultValue=\"500\" min=\"5\" max=\"1000\" />\n                    <span id=\"delayText\">500</span>ms\n                </div>\n                <div className=\"array-container\">\n                    <div className=\"array\">\n                        {this.state.array.map((value, index) => (\n                            <div className=\"array-bar\" \n                                style={{height: `${value}px`}} \n                                key={index}>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"progress-container\">\n                    <div className=\"progress-bar\">\n                        \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SortingVisualizer;","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}